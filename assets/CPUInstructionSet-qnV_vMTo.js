import{u as I,r as C,b as x,j as t,U as u}from"./index-BYLV5N22.js";import{E as p,S as c,a as f,P as i}from"./Section-C-ujvZM-.js";import{T as s}from"./Table-d9TnAunT.js";import{I as w}from"./ImageLink-C5MWN201.js";import{D as b}from"./Description-DFcG2hO7.js";import{u as X}from"./useDocumentMetadata-BEbfi55A.js";import{S as a}from"./SmoothScrollButton-CQLDMLsW.js";import{R as e}from"./RenderHTML-70YSaEVs.js";import{L as n}from"./ListItem-D5Ak1J4u.js";const S=""+new URL("try_it_yourself-i94AWUow.gif",import.meta.url).href,j={src:S,alt:"default",url:"https://cpuvisualsimulator.github.io/?program=ICAgICAgICAgICAgICAgTE9EICM4CiAgICAgICAgICAgICAgIExPRCA4CiAgICAgICAgICAgICAgIExPRCBZCiAgICAgICAgICAgICAgIE5PUAogICAgICAgICAgICAgICBOT1AKICAgICAgICAgICAgICAgTk9QCiAgICAgICAgICAgICAgIE5PUAogICAgICAgICAgICAgICBOT1AKICAgICAgICAgICAgICAgTk9QCiAgICAgICAgICAgICAgIE5PUAogICAgICAgICAgICAgICBOT1AKICAgICAgICAgICAgICAgTk9QCiAgICAgICAgICAgICAgIE5PUAogICAgICAgICAgICAgICBOT1AKICAgICAgICAgICAgICAgTk9QClk6ICAgICAgICAgICAgIE5PUA%3D%3D"},y=[{text:"Instruction set by Computer Hope (23/10/2021)",link:"https://www.computerhope.com/jargon/i/instset.htm"},{text:"Instruction Sets: Characteristics and Functions (Download PDF)",link:"https://faculty.tarleton.edu/agapie/documents/cs_343_arch/10_Instruction_Sets_characteristics2.pdf"},{text:"Data flow operations",link:"https://en.wikipedia.org/wiki/Instruction_set_architecture#Data_handling_and_memory_operations"},{text:"Control flow operations",link:"https://en.wikipedia.org/wiki/Control_flow"},{text:"Arithmetic-logic operations",link:"https://en.wikipedia.org/wiki/Arithmetic_logic_unit#Arithmetic_operations"}],L=[["00000001 | 00001000","ADD 8","Add content of memory cell number 8 into the Accumulator"],["00010001 | 00001000","ADD #8","Add number 8 into the Accumulator"],["00000001 | 00001000","ADD Y","Add content of memory cell tagged as Y into the Accumulator"]],D=[["LOD X","00000111","Load content of Memory Location X (or number #X) into the Accumulator."],["LOD #X","10010111","Load content of Memory Location X (or number #X) into the Accumulator."],["STO Y","00001000","Store the value of the Accumulator into Memory Location Y."]],F=[["JMP P","00000010","Unconditional jump to the instruction at location P."],["JZ P","00000011","Jump on Zero: if Flag Z is set, go to instruction number P, otherwise go to the next instruction."],["JNZ P","00000100","Jump on Not Zero: if Flag Z is cleared, go to instruction number P, otherwise, go to the next instruction."],["JN P","00000101","Jump on Negative: if Flag N is set, go to instruction number P, otherwise go to the next instruction."],["JNN P","00000110","Jump on Not Negative: if Flag N is cleared, go to instruction number P, otherwise go to the next instruction."],["NOP","00000000","No operation, go to the next instruction."],["HLT","00000001","Halt execution."]],T=[["ADD X","00001001","Add content of Memory Location X (or number #X) to the Accumulator. Flags are updated."],["ADD #X","10001001","Add content of Memory Location X (or number #X) to the Accumulator. Flags are updated."],["SUB X","00001010","Subtract content of Memory Location X (or number #X) from the Accumulator. Flags are updated."],["SUB #X","10001010","Subtract content of Memory Location X (or number #X) from the Accumulator. Flags are updated."],["MUL X","00001011","Multiply the Accumulator by the content of Memory Location X (or number #X). Flags are updated."],["MUL #X","10001011","Multiply the Accumulator by the content of Memory Location X (or number #X). Flags are updated."],["DIV X","00001100","Divide the Accumulator by the content of Memory Location X (or number #X). Flags are updated."],["DIV #X","10001100","Divide the Accumulator by the content of Memory Location X (or number #X). Flags are updated."],["AND X","00001101","Bitwise AND between the Accumulator and the content of Memory Location X (or number #X). Flags are updated."],["AND #X","10001101","Bitwise AND between the Accumulator and the content of Memory Location X (or number #X). Flags are updated."],["NOT X","00001111","Bitwise NOT of the content of Memory Location X (or number #X). The result is stored in the Accumulator."],["NOT #X","10001111","Bitwise NOT of the content of Memory Location X (or number #X). The result is stored in the Accumulator."],["CMP X","00001110","Subtract content of Memory Location X (or number #X) from the Accumulator. Flags are updated, but the content of the Accumulator is not modified."],["CMP #X","10001110","Subtract content of Memory Location X (or number #X) from the Accumulator. Flags are updated, but the content of the Accumulator is not modified."]],r={const_references:y,bodyRows:L,dataFlowRows:D,controlFlowRows:F,arithmeticLogicRows:T},O=()=>{X("CPU Instructions Set","This is the fifth page");const{setFooterData:g}=I();C.useEffect(()=>{g(l)},[g]);const l=r.const_references,m=r.bodyRows,A=r.dataFlowRows,d=r.controlFlowRows,h=r.arithmeticLogicRows,{t:o}=x("page5");return t.jsxs(p,{currentPage:5,children:[t.jsxs(c,{children:[t.jsx(f,{children:t.jsx(e,{htmlString:o("instructionSetSection.title")})}),t.jsx(i,{children:t.jsx(e,{htmlString:o("instructionSetSection.description")})}),t.jsx("div",{className:"mt-6 xl:mx-40",children:t.jsx(s,{headerTitles:["Binary code","Mnemonic code","Description"],bodyRows:m})})]}),t.jsxs(c,{children:[t.jsxs(i,{children:[t.jsx(e,{htmlString:o("instructionSection.text1")}),t.jsx("br",{}),t.jsx("br",{}),t.jsx(e,{htmlString:o("instructionSection.text2")})]}),t.jsxs(u,{className:"dark:text-gray-200",children:[t.jsx(n,{children:t.jsx(e,{htmlString:o("instructionSection.addressingModes.immediate")})}),t.jsx(n,{children:t.jsx(e,{htmlString:o("instructionSection.addressingModes.direct")})})]}),t.jsx(w,{image:j}),t.jsx(b,{children:t.jsx(e,{htmlString:o("instructionSection.description")})}),t.jsx(i,{children:t.jsx(e,{htmlString:o("instructionSection.text3")})}),t.jsxs(u,{className:"dark:text-gray-200",children:[t.jsxs(n,{children:[t.jsx(e,{htmlString:o("instructionSection.operationsSection.dataFlow.title")}),t.jsx(a,{targetId:"footer",buttonText:"[1]"})]}),t.jsxs(n,{children:[t.jsx(e,{htmlString:o("instructionSection.operationsSection.controlFlow.title")}),t.jsx(a,{targetId:"footer",buttonText:"[2]"})]}),t.jsxs(n,{children:[t.jsx(e,{htmlString:o("instructionSection.operationsSection.arithmeticLogic.title")}),t.jsx(a,{targetId:"footer",buttonText:"[3]"})]})]})]}),t.jsxs(c,{children:[t.jsx(i,{children:t.jsx(e,{htmlString:o("tableSection.text")})}),t.jsxs("div",{className:"mt-6 xl:mx-40",children:[t.jsx(s,{headerTitles:["Data Flow"],bodyRows:A}),t.jsx(s,{headerTitles:["Control Flow"],bodyRows:d}),t.jsx(s,{headerTitles:["Arithmetic-logic"],bodyRows:h})]})]})]})};export{O as default};
